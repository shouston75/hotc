<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name><![CDATA[(e32) ibEconomy in Member&#39;s Profiles]]></hook_name>
      <hook_desc><![CDATA[Adds point total and donate button to member&#39;s profiles]]></hook_desc>
      <hook_author>emoney</hook_author>
      <hook_email>emoney33@gmail.com</hook_email>
      <hook_website>http://emoneycodes.com</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:4:{s:20:"hook_ipb_version_min";i:0;s:20:"hook_ipb_version_max";i:0;s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>0.5.0</hook_version_human>
      <hook_version_long>050</hook_version_long>
      <hook_extra_data><![CDATA[a:2:{s:8:"language";a:1:{s:14:"public_profile";a:2:{s:0:"";s:6:"donate";i:1;s:10:"my_ranking";}}s:7:"display";a:1:{s:8:"language";s:39:"From public_profile: donate, my_ranking";}}]]></hook_extra_data>
      <hook_key>ibEconomyMemProfile</hook_key>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>ibEconomyMemBrdProfPts.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>ibEconomyMemBrdProfPts</hook_classname>
      <hook_data><![CDATA[a:6:{s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:12:"skin_profile";s:12:"skinFunction";s:13:"profileModern";s:4:"type";s:2:"if";s:2:"id";s:13:"favoriteForum";s:8:"position";s:11:"pre.startif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class ibEconomyMemBrdProfPts
{
    public $registry;
    
    public function __construct()
    {
        $this->registry = ipsRegistry::instance();
		$this->request  =& $this->registry->fetchRequest();
		$this->member   = $this->registry->member();
		$this->memberData =& $this->registry->member()->fetchMemberData();
    }
    
    public function getOutput()
    {
		#init
		$return = "";

		if ( $this->memberData['g_eco'] && $this->request['section'] != 'friends' && $this->request['module'] == 'profile' && $this->request['filter'] != 'ALL' ) 
		{
			#init
			$member = array();

			#load eco queries (which also loads ecoclass)
			if( !isset($this->registry->mysql_ibEconomy) )
			{
				require_once( IPSLib::getAppDir( 'ibEconomy' ) . '/sql/mysql_ibEconomy.php' );
				$this->registry->mysql_ibEconomy = new ibEconomyMySQL( $this->registry );
			}

			$member['pts']  = $this->registry->mysql_ibEconomy->tallyPointsByVars( 'member', $this->request['showuser'] );
			$member['rank'] = $this->registry->mysql_ibEconomy->rankMembers( 'points', $this->request['showuser'] );
			
			$return = $this->registry->output->getTemplate('ibEconomy')->memberProfilePts($member);
		}

		return $return;
    } 
}]]></hooks_source>
    </file>
    <file>
      <hook_file_real>ibEconomyMemBrdProfDon.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>ibEconomyMemBrdProfDon</hook_classname>
      <hook_data><![CDATA[a:6:{s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:12:"skin_profile";s:12:"skinFunction";s:13:"profileModern";s:4:"type";s:2:"if";s:2:"id";s:6:"pmlink";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class ibEconomyMemBrdProfDon
{
    public $registry;
    
    public function __construct()
    {
        $this->registry = ipsRegistry::instance();
		$this->settings =& $this->registry->fetchSettings();
		$this->request  =& $this->registry->fetchRequest();
		$this->member   = $this->registry->member();
		$this->memberData =& $this->registry->member()->fetchMemberData();
    }
    
    public function getOutput()
    {
		#init
		$return = "";

		if ( $this->memberData['g_eco'] && $this->request['section'] != 'friends' && $this->request['module'] == 'profile' && $this->request['filter'] != 'ALL' )  
		{
			$return = $this->registry->output->getTemplate('ibEconomy')->memberProfileDonate($this->request['showuser']);
		}

		return $return;
    } 
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language>
    <language>
      <word_app>members</word_app>
      <word_pack>public_profile</word_pack>
      <word_key>my_ranking</word_key>
      <word_default>My Ranking</word_default>
      <word_custom/>
      <word_js>0</word_js>
    </language>
    <language>
      <word_app>members</word_app>
      <word_pack>public_profile</word_pack>
      <word_key>donate</word_key>
      <word_default>Donate</word_default>
      <word_custom/>
      <word_js>0</word_js>
    </language>
    <language>
      <word_app>members</word_app>
      <word_pack>public_profile</word_pack>
      <word_key>edit</word_key>
      <word_default>Edit</word_default>
      <word_custom/>
      <word_js>0</word_js>
    </language>	
    <language>
      <word_app>members</word_app>
      <word_pack>public_profile</word_pack>
      <word_key>edit_my</word_key>
      <word_default>Edit My</word_default>
      <word_custom/>
      <word_js>0</word_js>
    </language>	
  </hookextras_language>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>