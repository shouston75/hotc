<?php/*e$ Bookie Mod 1.0.1*//*emoney isn't a coder*//*Created for Fantasy Football Haven (http://fantasyfootballhaven.com)*/if ( !defined( 'IN_IPB' ) ){print "<h1>Incorrect access</h1>You cannot access this file directly.";exit();}class component_public{var $ipsclass;	var $nav		= array();	var $output	    = "";	var $page_title = "";		/*-------------------------------------------------------------------------*/	// Auto run	/*-------------------------------------------------------------------------*/  function run_component()  {  	$this->ipsclass->load_language('lang_bookie');    $this->ipsclass->load_template('skin_bookie');		if ( !$this->ipsclass->vars['ibbookie_on'] )		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_bookie_offline'));		}		if ( $this->ipsclass->member['ibbookie_banned'] )			{    				$this->ipsclass->Error( array( 'MSG' => 'error_bookie_you_banned' ) );			}		if ( ( !$this->ipsclass->member['id'] ) || ( !$this->ipsclass->member['ibbookie_groups'] ) )		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_access_bookie'));		}				$current = $this->ipsclass->do_number_format($this->ipsclass->member[$this->ipsclass->vars['ibbookie_points']]);		$max_to_bet = $this->ipsclass->do_number_format($this->ipsclass->member['ibbookie_max_pts']);				$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->menu($current, $perms, $max_to_bet);		$this->nav[] = "<a href='{$this->ipsclass->base_url}autocom=bookie'>Bookie</a>";		$this->page_title = "Bookie";		switch ( $this->ipsclass->input['cmd'] )		{			case 'all_games':				$this->all_games();				break;							case 'do_bet':				$this->do_bet();				break;			case 'current_bets':				$this->current_bets();				break;					case 'input_winners':				$this->input_winners();				break;			case 'do_pay':				$this->do_pay();				break;								case 'add_games':				$this->add_games();				break;			case 'do_add_games':				$this->do_add_games();				break;				case 'edit_games':				$this->edit_games();				break;			case 'do_edit_games':				$this->do_edit_games();				break;							case 'bookie_stats':				$this->bookie_stats();				break;					case 'my_bets':				$this->my_bets();				break;									case 'find_member':				$this->find_member();				break;									case 'do_find_mem':				$this->do_find_mem();				break;									case 'ban_link':				$this->ban_link();				break;								case 'do_ban_member':				$this->do_ban_member();				break;																		case 'show_sport':				$this->show_sport();				break;								case 'add_cats':				$this->add_cats();				break;													case 'do_add_cats':				$this->do_add_cats();				break;								case 'edit_cats':				$this->edit_cats();				break;			case 'do_edit_cats':				$this->do_edit_cats();				break;				case 'winningest':				$this->winningest();				break;								case 'losingest':				$this->losingest();				break;								case 'member_bets':				$this->member_bets();				break;				case 'show_member_perms':				$this->show_member_perms();				break;						case 'sport_selector_full':				$this->sport_selector_full();				break;									case 'find_member_bets':				$this->find_member_bets();				break;				case 'do_find_mem_bets':				$this->do_find_mem_bets();				break;								case 'edit_bets':				$this->edit_bets();				break;				case 'do_edit_bets':				$this->do_edit_bets();				break;				case 'tools':				$this->tools();				break;					case 'mass_donate':				$this->mass_donate();				break;					case 'group_donate':				$this->group_donate();				break;									default:				$this->welcome();				break;		}		$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->footer();	$this->ipsclass->print->add_output( "$this->output" );	$this->ipsclass->print->do_output( array('TITLE' => $this->page_title, 'JS' => 0,'NAV' => $this->nav) );		}	/*-------------------------------------------------------------------------*/	// Welcome	/*-------------------------------------------------------------------------*/		function welcome()	{			$data = "{$this->ipsclass->vars['bookie_welcome']}";						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->welcome( $data );				$this->page_title = $this->ipsclass->lang['welcome'];		$this->nav[] = $this->ipsclass->lang['welcome'];	}		/*-------------------------------------------------------------------------*/	// All Games	/*-------------------------------------------------------------------------*/		function all_games()	{		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',																   'from'   => 'bookie_games',																   'where'  => "start>".'now()',														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['all_games']}";			$data = "{$this->ipsclass->lang['no_games']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 'select' => 'id, home_team, away_team, start, sport, cat_image, cat_name, home_odds, away_odds, home_spread, away_spread',			'from'   => 'bookie_games',			'order'  => 'start ASC',			'where'  => "start>".'now()',			'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )		)	 );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['home_team'] = $r['home_team'];				$r['away_team'] = $r['away_team'];				$r['home_odds'] = $r['home_odds'];				$r['away_odds'] = $r['away_odds'];				$r['home_spread'] = $r['home_spread'];				$r['away_spread'] = $r['away_spread'];								$r['long_start'] = $r['start'];				$r['start'] = date('D, M j g:ia T',strtotime($r['start']));								$r['sport'] = $r['sport'];				$r['cat_image'] = $r['cat_image'];				$r['cat_name'] = $r['cat_name'];				$time = date('D, M j g:ia T',strtotime($row['start'])); 								$content[] = $r;					}						$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=all_games",													 )		);						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->all_games( $content, $links );		}			else			{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_games'));			}		}		$this->page_title = $this->ipsclass->lang['all_games'];		$this->nav[]      = $this->ipsclass->lang['all_games'];	}		/*-------------------------------------------------------------------------*/	// Do Bet	/*-------------------------------------------------------------------------*/		function do_bet()	{			$this->ipsclass->row['id'] = intval( $this->ipsclass->row['id'] );		// $this->ipsclass->row['start'] = date( $this->ipsclass->row['start'] );		$this->ipsclass->input['amount'] = str_replace( ',', '', $this->ipsclass->input['amount'] );		$this->ipsclass->input['amount'] = str_replace( '-', '', intval($this->ipsclass->input['amount']) );		$amt = intval($this->ipsclass->input['amount']);		$gid = intval($this->ipsclass->input['gid']);        $pick = trim( $this->ipsclass->input['pick'] );		$start = $this->ipsclass->input['start'];		$mgroup = intval($this->ipsclass->input['mgroup']);		$members_display_name = trim($this->ipsclass->input['members_display_name']);		$home_odds = $this->ipsclass->input['home_odds'];		$away_odds = $this->ipsclass->input['away_odds'];		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = $this->ipsclass->input['away_spread'];				$home_team = trim ($this->ipsclass->input['home_team']);		$away_team = trim ($this->ipsclass->input['away_team']);				$cat_image = $this->ipsclass->input['cat_image'];					$long_start = $this->ipsclass->input['long_start'];		if ( $this->ipsclass->vars['ibbookie_bet_once'] )		{			$this->ipsclass->DB->build_query( array( 'select' => 'gid',                                     'from'   => 'bookie_bets',                                     'where'  => "gid=".$gid." AND userid=".$this->ipsclass->member['id'],                                     )     );			$this->ipsclass->DB->exec_query();			if ( $this->ipsclass->DB->get_num_rows() )			{    				$this->ipsclass->Error( array( 'MSG' => 'error_bookie_already_bet' ) );			}		}				if ( !$this->ipsclass->input['pick'] )			{				$this->ipsclass->Error( array( 'MSG' => 'bookie_no_pick' ) );			}					if ( $this->ipsclass->input['amount'] == 0 )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'bookie_no_bet'));			}						if ( $this->ipsclass->member['ibbookie_max_pts'])						{							if ( $this->ipsclass->input['amount'] > $this->ipsclass->member['ibbookie_max_pts'])				{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_bookie_overbet' , MAX => $this->ipsclass->member['ibbookie_max_pts'] ));				}						}						if ( $amt > $this->ipsclass->member[$this->ipsclass->vars['ibbookie_points']] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_not_enough'));			}						$this->ipsclass->DB->do_update( 'members', array( $this->ipsclass->vars['ibbookie_points'] => $this->ipsclass->member[$this->ipsclass->vars['ibbookie_points']] - $amt ), "id=".$this->ipsclass->member['id'] );						$this->ipsclass->DB->query("UPDATE ".SQL_PREFIX."members SET    ".ibbookie_won."=".ibbookie_won." - ".$amt."                                                            WHERE id= ".$this->ipsclass->member['id']);																						$this->ipsclass->DB->simple_construct(array('update' => 'members',                                                            'set'    => "ibbookie_bets=ibbookie_bets+1",                                                            'where'  => "id=".$this->ipsclass->member['id']                                                      )        );                $this->ipsclass->DB->simple_exec();						if ( $pick == $home_team )			{			$odds = $this->ipsclass->input['home_odds'];			}			if ( $pick == $away_team )			{			$odds = $this->ipsclass->input['away_odds'];			}						$this->ipsclass->DB->do_insert( 'bookie_bets', array( 'userid'       => $this->ipsclass->member['id'],															   'username'       => $this->ipsclass->member['name'],															   'gid'         => $gid,															   'cat_image'         => $cat_image,															   'home_team'  => $home_team,															   'away_team' => $away_team, 															   'home_odds' => $home_odds,															   'home_spread' => $home_spread,															   'away_odds' => $away_odds,															   'away_spread' => $away_spread,															   'amount'         => $amt,															   'pick'			=> $pick,															   'start'			=> $long_start,															   'odds'			=> $odds,															   'members_display_name' => $members_display_name,															   'mgroup' => $mgroup,															   'time'           => time(),									  )						 );					$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['bet_made'], "&autocom=bookie&cmd=current_bets" );		}      /*-------------------------------------------------------------------------*/	// Current Bets	/*-------------------------------------------------------------------------*/		function current_bets()	{			if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(bid) AS total',																   'from'   => 'bookie_bets',														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['all_games']}";			$data = "{$this->ipsclass->lang['no_bets']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{					$this->ipsclass->DB->build_query( array( 'select' => 'bid, userid, gid, start, cat_image, amount, pick, payout, time, username, mgroup, members_display_name, home_team, home_odds, home_spread, away_team, away_odds, away_spread',		'from'   => 'bookie_bets',		'order'  => 'bid DESC',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();				if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['bid']   = $r['bid'];				$r['userid'] = $r['userid'];				$r['gid'] = $r['gid'];				$r['cat_image'] = $r['cat_image'];				$r['amount'] = $r['amount'];				$r['pick'] = $r['pick'];				$r['payout'] = $r['payout'];				$r['start'] = date('D, M j g:ia T',strtotime($r['start']));								$r['time'] = $r['time'];				$r['home_team']   = $r['home_team'];				$r['home_odds'] = $r['home_odds'];				$r['home_spread'] = $r['home_spread'];				$r['away_team'] = $r['away_team'];				$r['away_odds'] = $r['away_odds'];								$r['away_spread'] = $r['away_spread'];								$r['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted($r['members_display_name'], $r['mgroup'] ), $r['userid'] );				$r['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$r['mgroup']]['g_title'], $r['mgroup'] );								$content[] = $r;			}								$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=current_bets",													 )		);							$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->current_bets( $content, $links, $contentavy);		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_bets'));		}				}				$this->page_title = $this->ipsclass->lang['current_bets'];		$this->nav[]      = $this->ipsclass->lang['current_bets'];		}		/*-------------------------------------------------------------------------*/	// Input Winners	/*-------------------------------------------------------------------------*/		function input_winners()	{		if ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}				if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}			$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',																   'from'   => 'bookie_games',																   'where'   => "winner = '' ",														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['input_winners']}";			$data = "{$this->ipsclass->lang['no_games']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{				$this->ipsclass->DB->build_query( array( 'select' => 'id, home_team, away_team, start, home_spread, away_spread, home_odds, away_odds, cat_image',				'from'   => 'bookie_games',				'where'   => "winner = '' ",								'order'  => 'start ASC',				'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )		) );			$this->ipsclass->DB->exec_query();				if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['home_team'] = $r['home_team'];				$r['away_team'] = $r['away_team'];								$r['cat_image'] = $r['cat_image'];				$r['start'] = date('D, M j g:ia T',strtotime($r['start']));								$content[] = $r;			}								$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=input_winners",													 )		);				$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->input_winners( $content, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_null_winners'));		}		$this->page_title = $this->ipsclass->lang['input_winners'];		$this->nav[]      = $this->ipsclass->lang['input_winners'];		}	}    /*-------------------------------------------------------------------------*/    // Do Pay    /*-------------------------------------------------------------------------*/        function do_pay()    {        if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }                $id     = intval($this->ipsclass->input['id']);        $winner = $this->ipsclass->input['winner'];                $this->ipsclass->DB->simple_construct(array('update' => 'bookie_games',                                                    'set'    => "winner='$winner'",                                                    'where'  => "id=".$id                                              )        );        $this->ipsclass->DB->simple_exec();        $this->ipsclass->DB->simple_construct(array('update' => 'bookie_games',                                                    'set'    => "time_paid=".time(),                                                    'where'  => "id=".$id                                              )        );        $this->ipsclass->DB->simple_exec();		if ( $winner != 'draw' )					{                $this->ipsclass->DB->simple_construct(array('select' => 'gid, userid, amount, pick, odds',                                                    'from'   => 'bookie_bets',                                                    'where'  => "gid=".$id." AND pick='$winner'",                                              )        );        $o = $this->ipsclass->DB->simple_exec();			if ( $this->ipsclass->DB->get_num_rows($o) )			{				while ( $r = $this->ipsclass->DB->fetch_row($o) )				{				$this->ipsclass->DB->query("UPDATE ".SQL_PREFIX."members SET    ".$this->ipsclass->vars['ibbookie_points']."=".$this->ipsclass->vars['ibbookie_points']." + ".($r['amount']*($r['odds'] + 1))."                                                            WHERE id= ".$r['userid']);																			$this->ipsclass->DB->query("UPDATE ".SQL_PREFIX."members SET    ".ibbookie_won."=".ibbookie_won." + ".($r['amount']*($r['odds'] + 1))."                                                            WHERE id= ".$r['userid']);																	        				$r['amount'] = ($r['amount']*($r['odds'] + 1));								$this->ipsclass->DB->simple_construct(array('update' => 'bookie_bets',                                                            'set'    => "payout=".$r['amount'],															'where'  => "gid=".$r['gid']." AND userid=".$r['userid'],                                                      )        );                $this->ipsclass->DB->simple_exec();														if ( $this->ipsclass->vars['bookie_pm_on'] )						{					$this->do_pm( $r[userid], $r[amount], $winner );					}				}			}				}				if ( $winner == 'draw' )					{						$this->ipsclass->DB->simple_construct(array('select' => 'gid, userid, amount, pick, odds',                                                    'from'   => 'bookie_bets',                                                    'where'  => "gid=".$id,                                              )        );			$o = $this->ipsclass->DB->simple_exec();			if ( $this->ipsclass->DB->get_num_rows($o) )			{							while ( $r = $this->ipsclass->DB->fetch_row($o) )				{				$this->ipsclass->DB->query("UPDATE ".SQL_PREFIX."members SET    ".$this->ipsclass->vars['ibbookie_points']."=".$this->ipsclass->vars['ibbookie_points']." + ".($r['amount'])."                                                            WHERE id= ".$r['userid']);																			$this->ipsclass->DB->query("UPDATE ".SQL_PREFIX."members SET    ".ibbookie_won."=".ibbookie_won." + ".($r['amount'])."                                                            WHERE id= ".$r['userid']);																							$r['amount'] = '-1';								$this->ipsclass->DB->simple_construct(array('update' => 'bookie_bets',                                                            'set'    => "payout=".$r['amount'],															'where'  => "gid=".$r['gid']." AND userid=".$r['userid'],                                                      )        );                $this->ipsclass->DB->simple_exec();						}										}					}									        $this->ipsclass->print->redirect_screen( $this->ipsclass->lang['winner_added'], "&autocom=bookie&cmd=input_winners" );     					}		/*-------------------------------------------------------------------------*/	// Do a PM	/*-------------------------------------------------------------------------*/		function do_pm( $userid=0, $amount=0, $pick=0 )	{		require_once( ROOT_PATH.'sources/lib/func_msg.php' );		$msglib           =  new func_msg();		$msglib->ipsclass =& $this->ipsclass; 			$msglib->init();				$pm = sprintf( $this->ipsclass->vars['bookie_pm'], $amount, $pick );						$msglib->to_by_id	 = $userid;		$msglib->from_member = $this->ipsclass->member;		$msglib->msg_title   = $this->ipsclass->lang['pm_subject'];		$msglib->msg_post	 = $pm;		$msglib->force_pm	 = 1;				$msglib->send_pm();	}			/*-------------------------------------------------------------------------*/	// Add Games	/*-------------------------------------------------------------------------*/		function add_games()	{        if  ( !$this->ipsclass->member['ibbookie_add_groups'] && ( !$this->ipsclass->member['ibbookie_add'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_add_bookie'));		}	$this->ipsclass->DB->build_query( array( 'select' => 'id, cat_name, cat_image',		'from'   => 'bookie_cats',		'order'  => 'id ASC',		'limit'  => array( 0, 100 )	) );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['cat_name'] = $r['cat_name'];				$r['cat_image'] = $r['cat_image'];								$content[] = $r;			}				$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->add_games( $content );		}		$this->page_title = $this->ipsclass->lang['add_game'];		$this->nav[]      = $this->ipsclass->lang['add_game'];	}		/*-------------------------------------------------------------------------*/	// Do Add Games	/*-------------------------------------------------------------------------*/		function do_add_games()		{        if  ( !$this->ipsclass->member['ibbookie_add_groups'] && ( !$this->ipsclass->member['ibbookie_add'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_add_bookie'));		}				if ( $this->ipsclass->input['home_odds'] && !$this->ipsclass->input['away_odds'] )		{		$start = $this->ipsclass->input['start'];		$home = $this->ipsclass->input['home_team'];		$away = $this->ipsclass->input['away_team'];		$home_odds = $this->ipsclass->input['home_odds'];		$away_odds = (1 / $home_odds);		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = -($home_spread);					$sport = $this->ipsclass->input['sport'];		}				if ( $this->ipsclass->input['away_odds'] && !$this->ipsclass->input['home_odds'] )		{		$start = $this->ipsclass->input['start'];		$home = $this->ipsclass->input['home_team'];		$away = $this->ipsclass->input['away_team'];		$away_odds = $this->ipsclass->input['away_odds'];		$home_odds = (1 / $away_odds);		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = -($home_spread);				$sport = $this->ipsclass->input['sport'];		}				if ( !$this->ipsclass->input['home_odds'] && !$this->ipsclass->input['away_odds'] )		{		$start = $this->ipsclass->input['start'];		$home = $this->ipsclass->input['home_team'];		$away = $this->ipsclass->input['away_team'];		$home_odds = 1.0;		$away_odds = 1.0;		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = -($home_spread);			$sport = $this->ipsclass->input['sport'];		}				if ( $this->ipsclass->input['home_odds'] && $this->ipsclass->input['away_odds'] )		{		$start = $this->ipsclass->input['start'];		$home = $this->ipsclass->input['home_team'];		$away = $this->ipsclass->input['away_team'];		$home_odds = $this->ipsclass->input['home_odds'];		$away_odds = $this->ipsclass->input['away_odds'];		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = -($home_spread);				$sport = $this->ipsclass->input['sport'];		}					if ( !$this->ipsclass->input['start'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_start' ) );			}					if ( !$this->ipsclass->input['home_team'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_home_team'));			}					if ( !$this->ipsclass->input['away_team'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_away_team'));			}						if ( !$this->ipsclass->input['sport'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_sport' ) );			}						$this->ipsclass->DB->simple_construct(array('select' => 'cat_image',                                                    'from'   => 'bookie_cats',                                                    'where'  => "id='$sport'"                                              )        );			$this->ipsclass->DB->simple_exec();						if ( $this->ipsclass->DB->get_num_rows() )			{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$cat_image = $r['cat_image'];								$content[] = $r;			}			}			$this->ipsclass->DB->do_insert( 'bookie_games', array( 'start'        => $start,															   'home_team'        => $home,															   'away_team'        => $away,															   'home_odds'        => $home_odds,															   'away_odds'        => $away_odds,																   'home_spread'      => $home_spread,															   'away_spread'      => $away_spread,															   															   'sport'            => $sport,															   'cat_image'        => $cat_image,									 )						 );							$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['game_added'], "&autocom=bookie&cmd=add_games" );	}		/*-------------------------------------------------------------------------*/	// Edit Games	/*-------------------------------------------------------------------------*/		function edit_games()	{		if ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',																   'from'   => 'bookie_games',																   'where'  => "start>".'now()',														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['edit_games']}";			$data = "{$this->ipsclass->lang['no_games']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{	$this->ipsclass->DB->build_query( array( 'select' => 'id, cat_name, cat_image',		'from'   => 'bookie_cats',		'order'  => 'id ASC',		'limit'  => array( 0, 100 )	) );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$contentcat = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['cat_id']   = $r['id'];				$r['cat_name'] = $r['cat_name'];				$r['cat_image'] = $r['cat_image'];								$contentcat[] = $r;			}			}			$this->ipsclass->DB->build_query( array( 'select' => 'id, home_team, away_team, start, sport, home_odds, away_odds, home_spread, away_spread',		'from'   => 'bookie_games',		'order'  => 'id DESC',		'where'  => "start>".'now()',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['home_team'] = $r['home_team'];				$r['away_team'] = $r['away_team'];				$r['start'] = $r['start'];				$r['sport'] = $r['sport'];				$r['home_odds'] = $r['home_odds'];				$r['away_odds'] = $r['away_odds'];				$r['home_spread'] = $r['home_spread'];				$r['away_spread'] = $r['away_spread'];								$content[] = $r;			}										$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=edit_games",													 )		);							$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->edit_games( $content, $contentcat, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_games'));		}		}		$this->page_title = $this->ipsclass->lang['edit_games'];		$this->nav[]      = $this->ipsclass->lang['edit_games'];	}		/*-------------------------------------------------------------------------*/	// Do Edit Games	/*-------------------------------------------------------------------------*/		function do_edit_games()	{        if  ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}			$start = $this->ipsclass->input['start'];		$home = $this->ipsclass->input['home_team'];		$away = $this->ipsclass->input['away_team'];		$home_odds = $this->ipsclass->input['home_odds'];		$away_odds = $this->ipsclass->input['away_odds'];		$home_spread = $this->ipsclass->input['home_spread'];		$away_spread = $this->ipsclass->input['away_spread'];				$sport = $this->ipsclass->input['sport'];		$gid = $this->ipsclass->input['gid'];		$delete = $this->ipsclass->input['delete'];					if ( $this->ipsclass->input['delete'] == 1 )			{			$this->ipsclass->DB->query("DELETE FROM ".SQL_PREFIX."bookie_games WHERE id = ".$gid );			}						if ( !$this->ipsclass->input['start'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_start' ) );			}					if ( !$this->ipsclass->input['home_team'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_home_team'));			}					if ( !$this->ipsclass->input['away_team'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_away_team'));			}						if ( !$this->ipsclass->input['sport'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_sport' ) );			}				$this->ipsclass->DB->build_query( array( 'select' => 'cat_image',				'from'   => 'bookie_cats',				'where'  => "id=".$sport				)	 );		 				$this->ipsclass->DB->exec_query();							if ( $this->ipsclass->DB->get_num_rows() )			{			$contentcat = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$cat_image = $r['cat_image'];								$contentcat[] = $r;			}				}			$this->ipsclass->DB->simple_construct(array('update' => 'bookie_games',													'set'    => "sport='$sport',start='$start',home_team='$home',away_team='$away',home_odds='$home_odds',away_odds='$away_odds',home_spread='$home_spread',away_spread='$away_spread',cat_image='$cat_image'",                                                    'where'  => "id=".$gid                                              )        );			$this->ipsclass->DB->simple_exec();					$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['game_edited'], "&autocom=bookie&cmd=edit_games" );	}		/*-------------------------------------------------------------------------*/	// Bookie Stats	/*-------------------------------------------------------------------------*/		function bookie_stats()	{			        $this->ipsclass->DB->simple_construct( array(        'select' => 'count(bid) as total_bets, sum(amount) as total_waged, sum(payout) as total_payout',        'from' => 'bookie_bets',        ) );        $this->ipsclass->DB->simple_exec();        $data = $this->ipsclass->DB->fetch_row();		if ( $data['total_bets'] > 0 )		{		$data['per_bet'] = ( ($data['total_payout'] / $data['total_bets'] ) );		$data['total_bets'] = $this->ipsclass->do_number_format($data['total_bets']);        $data['total_waged'] = $this->ipsclass->do_number_format($data['total_waged']);        $data['total_payout'] = $this->ipsclass->do_number_format($data['total_payout']);        $data['per_bet'] = $this->ipsclass->do_number_format($data['per_bet']);        $this->ipsclass->DB->simple_construct( array(        'select' => 'id',        'from' => 'bookie_games',		'order'  => 'id DESC',		'limit'  => array( 0, 1 )        ) );        $this->ipsclass->DB->simple_exec();		        $row = $this->ipsclass->DB->fetch_row();				$row['id'] = $this->ipsclass->do_number_format($row['id']);	 				$this->ipsclass->DB->simple_construct( array(        'select' => 'home_team, away_team, start, members_display_name, mgroup, userid, amount, payout',        'from' => 'bookie_bets',		'order'  => 'amount DESC',		'limit'  => array( 0, 1 )        ) );        $this->ipsclass->DB->simple_exec();		        $bet = $this->ipsclass->DB->fetch_row();				$bet['amount'] = $this->ipsclass->do_number_format($bet['amount']);		$bet['home_team'] = $bet['home_team'];		$bet['away_team'] = $bet['away_team'];		$bet['start'] = date('M jS y',strtotime($bet['start']));		$bet['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted( $bet['members_display_name'], $bet['mgroup'] ), $bet['userid'] );		$bet['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$bet['mgroup']]['g_title'], $bet['mgroup'] );		$this->ipsclass->DB->simple_construct( array(        'select' => 'home_team, away_team, start, members_display_name, mgroup, userid, payout',        'from' => 'bookie_bets',		'order'  => 'payout DESC',		'limit'  => array( 0, 1 )        ) );        $this->ipsclass->DB->simple_exec();		        $pay = $this->ipsclass->DB->fetch_row();				$pay['home_team'] = $pay['home_team'];		$pay['away_team'] = $pay['away_team'];		$pay['start'] = date('M jS y',strtotime($pay['start']));		$pay['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted( $pay['members_display_name'], $pay['mgroup'] ), $pay['userid'] );		$pay['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$pay['mgroup']]['g_title'], $pay['mgroup'] );				$pay['payout'] = $this->ipsclass->do_number_format($pay['payout']);			$this->ipsclass->DB->simple_construct( array(        'select' => 'gid, count(gid) AS qty, home_team, away_team, start, payout',        'from' => 'bookie_bets',		'group' => 'gid',		'order'  => 'qty DESC',		'limit'  => array( 0, 1 )        ) );        $this->ipsclass->DB->simple_exec();		        $mode = $this->ipsclass->DB->fetch_row();				$mode['qty'] = $mode['qty'];		$mode['key'] = $mode['key'];		$mode['gid'] = $mode['gid'];		$mode['home_team'] = $mode['home_team'];		$mode['away_team'] = $mode['away_team'];		$mode['start'] = date('M jS y',strtotime($mode['start']));				$this->ipsclass->DB->simple_construct( array(        'select' => 'sum(payout) AS total_paid',        'from' => 'bookie_bets',		'where'  => "gid=".$mode['gid'],		'limit'  => array( 0, 1 )        ) );        $this->ipsclass->DB->simple_exec();					        $paid = $this->ipsclass->DB->fetch_row();				$paid['total_paid'] = $this->ipsclass->do_number_format($paid['total_paid']);						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->bookie_stats( $data, $row, $bet, $pay, $mode, $paid );			}		else		{			$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['bookie_stats']}";			$data = "{$this->ipsclass->lang['no_stats']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		$this->page_title = $this->ipsclass->lang['bookie_stats'];		$this->nav[] = $this->ipsclass->lang['bookie_stats'];	}	    /*-------------------------------------------------------------------------*/	// My Bets	/*-------------------------------------------------------------------------*/		function my_bets()	{			if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(bid) AS total',																   'from'   => 'bookie_bets',																   'where'  => "userid=".$this->ipsclass->member['id'],														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['my_bets']}";			$data = "{$this->ipsclass->lang['no_bets']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{					$this->ipsclass->DB->build_query( array( 'select' => 'gid, cat_image, start, amount, pick, payout, home_team, home_odds, home_spread, away_team, away_odds, away_spread',		'from'   => 'bookie_bets',		'where'  => "userid=".$this->ipsclass->member['id'],		'order'  => 'bid DESC',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();				if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['gid'] = $r['gid'];				$r['cat_image'] = $r['cat_image'];				$r['amount'] = $r['amount'];				$r['pick'] = $r['pick'];								$r['payout'] = $r['payout'];				$r['home_team']   = $r['home_team'];				$r['home_odds'] = $r['home_odds'];				$r['home_spread'] = $r['home_spread'];				$r['away_team'] = $r['away_team'];				$r['away_odds'] = $r['away_odds'];								$r['away_spread'] = $r['away_spread'];				$r['start'] = date('D, M j g:ia T',strtotime($r['start']));												$content[] = $r;															$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=my_bets",													 )		);				}						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->my_bets( $content, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_bets'));		}				$this->page_title = $this->ipsclass->lang['my_bets'];		$this->nav[]      = $this->ipsclass->lang['my_bets'];	}	}	/*-------------------------------------------------------------------------*/	// Find Member	/*-------------------------------------------------------------------------*/		function find_member()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}						$data = array( 'title'     => $this->ipsclass->lang['find_member'],					   'form_code' => 'do_find_mem',					   'text'      => $this->ipsclass->lang['ban_member'],					 );					 			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->find_member( $data );				$this->page_title = $this->ipsclass->lang['find_member'];			$this->nav[] = $this->ipsclass->lang['find_member'];	}		/*-------------------------------------------------------------------------*/	// Do Find Member	/*-------------------------------------------------------------------------*/			function do_find_mem()	{	        if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }		$this->ipsclass->input['mem_name'] = strtolower( trim( $this->ipsclass->input['mem_name'] ) );				if ( !$this->ipsclass->input['mem_name'] )		{			$this->ipsclass->Error( array( 'MSG' => 'error_no_user' ) );		}				$memb = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'members_display_name, id',																  'from'   => 'members',																  'where'  => "members_l_display_name='".$this->ipsclass->input['mem_name']."'",														 )		);				if ( !$memb['id'] )		{			$this->ipsclass->Error( array( 'MSG' => 'error_no_user' ) );		}				$this->ipsclass->boink_it( $this->ipsclass->base_url."autocom=bookie&cmd=ban_link&amp;userid=".$memb['id'] );	}	/*-------------------------------------------------------------------------*/	// Ban Edit Member Page	/*-------------------------------------------------------------------------*/		function ban_link()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }				$this->ipsclass->input['userid'] = intval($this->ipsclass->input['userid']);					if ( !$this->ipsclass->input['userid'] )			{				$this->ipsclass->Error( array( 'MSG' => 'no_user' ) );			}			if ($this->ipsclass->vars['ibbookie_points'] == ibbookie_points)			{			$r = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'id, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned, members_display_name, ibbookie_bets, ibbookie_won, ibbookie_points AS ibbookie_points',															   'from'   => 'members',															   'where'  => 'id='.$this->ipsclass->input['userid'],													  )		 );			}						if ($this->ipsclass->vars['ibbookie_points'] == points)			{			$r = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'id, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned, members_display_name, ibbookie_bets, ibbookie_won, points AS ibbookie_points',															   'from'   => 'members',															   'where'  => 'id='.$this->ipsclass->input['userid'],													  )		 );			}								if ($this->ipsclass->vars['ibbookie_points'] == money )			{			$r = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'id, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned, members_display_name, ibbookie_bets, ibbookie_won, money AS ibbookie_points',															   'from'   => 'members',															   'where'  => 'id='.$this->ipsclass->input['userid'],													  )		 );			}						if ($this->ipsclass->vars['ibbookie_points'] == utr_points)			{			$r = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'id, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned, members_display_name, ibbookie_bets, ibbookie_won, utr_points AS ibbookie_points',															   'from'   => 'members',															   'where'  => 'id='.$this->ipsclass->input['userid'],													  )		 );			}			if ($this->ipsclass->vars['ibbookie_points'] == posts)			{			$r = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'id, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned, members_display_name, ibbookie_bets, ibbookie_won, posts AS ibbookie_points',															   'from'   => 'members',															   'where'  => 'id='.$this->ipsclass->input['userid'],													  )		 );			}						if ( $r['id'] )			{  				$r['ban'] = $r['ibbookie_banned'];				$r['name']   = $r['members_display_name'];				$r['ibbookie_add']   = $r['ibbookie_add'];				$r['ibbookie_mod']   = $r['ibbookie_mod'];				$r['ibbookie_admin']   = $r['ibbookie_admin'];								$r['ibbookie_won']   = $r['ibbookie_won'];								$r['ibbookie_bets']   = $r['ibbookie_bets'];								$r['ibbookie_points'] = $r['ibbookie_points'];																$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->ban_link( $r );			}			else			{				$this->ipsclass->Error( array( 'MSG' => 'error_no_user' ) );			}						$this->page_title = $this->ipsclass->lang['ban_member'];		$this->nav[]      = $this->ipsclass->lang['ban_member'];	}	/*-------------------------------------------------------------------------*/	// Do Ban Edit Member	/*-------------------------------------------------------------------------*/		function do_ban_member()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }			$this->ipsclass->input['userid'] = intval( $this->ipsclass->input['userid'] );			$ban = $this->ipsclass->input['ban'];			$add_games = $this->ipsclass->input['add_games'];			$mod_games = $this->ipsclass->input['mod_games'];			$admin_games = $this->ipsclass->input['admin_games'];			$username = trim( $this->ipsclass->input['username'] );			$ibbookie_bets = intval( $this->ipsclass->input['ibbookie_bets'] );						$ibbookie_won = intval( $this->ipsclass->input['ibbookie_won'] );						$ibbookie_points = intval( $this->ipsclass->input['ibbookie_points'] );			if ( !$this->ipsclass->input['userid'] )			{				$this->ipsclass->Error( array( 'MSG' => 'no_user' ) );			}			$this->ipsclass->DB->build_query( array( 'update' => 'members',												 'set'    => "ibbookie_banned=$ban,ibbookie_bets=$ibbookie_bets,ibbookie_admin=$admin_games,ibbookie_mod=$mod_games,ibbookie_add=$add_games,ibbookie_won=$ibbookie_won,{$this->ipsclass->vars['ibbookie_points']}=$ibbookie_points",												 'where'  => 'id='.$this->ipsclass->input['userid']										)	   );			$this->ipsclass->DB->exec_query();						$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['member_banned'], "&autocom=bookie&cmd=show_member_perms" );	}		/*-------------------------------------------------------------------------*/	// Show Sport	/*-------------------------------------------------------------------------*/		function show_sport()	{														  		$this->ipsclass->DB->query("SELECT id, home_team, away_team, cat_image, cat_name, sport, start, home_odds, away_odds, home_spread, away_spread, sport FROM ".SQL_PREFIX."bookie_games WHERE start > now() AND sport=".$this->ipsclass->input['id']);	 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['home_team'] = $r['home_team'];				$r['away_team'] = $r['away_team'];				$r['home_odds'] = $r['home_odds'];				$r['away_odds'] = $r['away_odds'];					$r['home_spread'] = $r['home_spread'];				$r['away_spread'] = $r['away_spread'];					$r['long_start'] = $r['start'];								$r['start'] = date('D, M j g:ia T',strtotime($r['start']));								$r['sport'] = $r['sport'];				$r['cat_image'] = $r['cat_image'];				$r['cat_name'] = $r['cat_name'];								$content[] = $r;							}						$sport = $this->ipsclass->input['sport'];			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->show_sport( $content, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_games'));		}		$this->page_title = $this->ipsclass->lang['search_results'];		$this->nav[] = $this->ipsclass->lang['search_results'];	}		/*-------------------------------------------------------------------------*/	// Add Cats	/*-------------------------------------------------------------------------*/		function add_cats()	{        if  ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}				$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->add_cats( $content );				$this->page_title = $this->ipsclass->lang['add_cats'];		$this->nav[]      = $this->ipsclass->lang['add_cats'];	}		/*-------------------------------------------------------------------------*/	// Do Add Cats	/*-------------------------------------------------------------------------*/		function do_add_cats()		{        if  ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}			$cat_name = $this->ipsclass->input['cat_name'];		$cat_image = $this->ipsclass->input['cat_image'];					if ( !$this->ipsclass->input['cat_name'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_cat_name' ) );			}					if ( !$this->ipsclass->input['cat_image'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_cat_image'));			}						$this->ipsclass->DB->do_insert( 'bookie_cats', array( 'cat_name'       => $cat_name,															   'cat_image'       => $cat_image,									  )						 );							$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['cat_added'], "&autocom=bookie&cmd=add_cats" );	}		/*-------------------------------------------------------------------------*/	// Edit Cats	/*-------------------------------------------------------------------------*/		function edit_cats()	{        if  ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',																   'from'   => 'bookie_cats',														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['edit_cats']}";			$data = "{$this->ipsclass->lang['no_cats']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 'select' => 'id, cat_name, cat_image',		'from'   => 'bookie_cats',		'order'  => 'id ASC',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['cat_id']   = $r['id'];				$r['cat_name'] = $r['cat_name'];				$r['cat_image'] = $r['cat_image'];								$content[] = $r;			}										$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=edit_cats",													 )		);							$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->edit_cats( $content, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_cats'));		}				$this->page_title = $this->ipsclass->lang['edit_cats'];		$this->nav[]      = $this->ipsclass->lang['edit_cats'];		}	}		/*-------------------------------------------------------------------------*/	// Do Edit Games	/*-------------------------------------------------------------------------*/		function do_edit_cats()		{        if  ( !$this->ipsclass->member['ibbookie_mod_groups'] && ( !$this->ipsclass->member['ibbookie_mod'] ))		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_mod_bookie'));		}			$id = $this->ipsclass->input['id'];		$cat_name = $this->ipsclass->input['cat_name'];		$cat_image = $this->ipsclass->input['cat_image'];		$delete = $this->ipsclass->input['delete'];					if ( $this->ipsclass->input['delete'] == 1 )			{			$this->ipsclass->DB->query("DELETE FROM ".SQL_PREFIX."bookie_cats WHERE id = ".$id );			}						if ( !$this->ipsclass->input['id'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_cat_id' ) );			}					if ( !$this->ipsclass->input['cat_image'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_cat_image'));			}					if ( !$this->ipsclass->input['cat_name'] )			{				$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_cat_name'));			}						$this->ipsclass->DB->simple_construct(array('update' => 'bookie_cats',													'set'    => "cat_name='$cat_name', cat_image='$cat_image'",                                                    'where'  => "id=".$id                                              )        );			$this->ipsclass->DB->simple_exec();													$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['cat_edited'], "&autocom=bookie&cmd=edit_cats" );	}	/*-------------------------------------------------------------------------*/	// Winningest Members	/*-------------------------------------------------------------------------*/		function winningest()	{		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(ibbookie_won) AS total',																   'from'   => 'members',																   'where' => "ibbookie_won > 0",														  )		 );				if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['winningest']}";			$data = "{$this->ipsclass->lang['no_winningest']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 			'select' => 'members_display_name, ibbookie_won, mgroup, id',			'from'   => 'members',			'where' => "ibbookie_won > 0",			'order'  => 'ibbookie_won DESC',			'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )		) );		 		$this->ipsclass->DB->exec_query();						$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{  				$r['points'] = $this->ipsclass->do_number_format( $r['ibbookie_won'] );				$r['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted( $r['members_display_name'], $r['mgroup'] ), $r['id'] );				$r['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$r['mgroup']]['g_title'], $r['mgroup'] );								$content[] = $r;			}						$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=winningest",													 )		);						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->winningest( $content, $links );		}				$this->page_title = $this->ipsclass->lang['winningest'];		$this->nav[]      = $this->ipsclass->lang['winningest'];	}		/*-------------------------------------------------------------------------*/	// Losingest Members	/*-------------------------------------------------------------------------*/		function losingest()	{		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(ibbookie_won) AS total',																   'from'   => 'members',																   'where' => "ibbookie_won < 0",														  )		 );				if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['losingest']}";			$data = "{$this->ipsclass->lang['no_losingest']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 			'select' => 'members_display_name, ibbookie_won, mgroup, id',			'from'   => 'members',			'where' => "ibbookie_won < 0",			'order'  => 'ibbookie_won ASC',			'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )		) );		 		$this->ipsclass->DB->exec_query();						$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{  				$r['points'] = $this->ipsclass->do_number_format( $r['ibbookie_won'] );				$r['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted( $r['members_display_name'], $r['mgroup'] ), $r['id'] );				$r['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$r['mgroup']]['g_title'], $r['mgroup'] );								$content[] = $r;			}						$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=losingest",													 )		);						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->losingest( $content, $links );		}				$this->page_title = $this->ipsclass->lang['losingest'];		$this->nav[]      = $this->ipsclass->lang['losingest'];	}		/*-------------------------------------------------------------------------*/	// Member Bets	/*-------------------------------------------------------------------------*/		function member_bets()	{			if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$this->ipsclass->input['memberid'] = intval($this->ipsclass->input['memberid']);				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(bid) AS total',																   'from'   => 'bookie_bets',																   'where'  => "userid=".$this->ipsclass->input['memberid'],														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['member_bets']}";			$data = "{$this->ipsclass->lang['no_bets']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{					$this->ipsclass->DB->build_query( array( 'select' => 'gid, cat_image, amount, pick, start, payout, userid, home_team, home_odds, home_spread, away_team, away_odds, away_spread',		'from'   => 'bookie_bets',		'where'  => "userid=".$this->ipsclass->input['memberid'],		'order'  => 'bid DESC',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();				if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['gid'] = $r['gid'];				$r['cat_image'] = $r['cat_image'];				$r['amount'] = $r['amount'];				$r['pick'] = $r['pick'];								$r['payout'] = $r['payout'];				$r['userid'] = $r['userid'];				$r['home_team']   = $r['home_team'];				$r['home_odds'] = $r['home_odds'];				$r['home_spread'] = $r['home_spread'];				$r['away_team'] = $r['away_team'];				$r['away_odds'] = $r['away_odds'];								$r['away_spread'] = $r['away_spread'];						$r['start'] = date('D, M j g:ia T',strtotime($r['start']));												$content[] = $r;															$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=member_bets&memberid={$r[userid]}",													 )		);				}						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->member_bets( $content, $links );		}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_bets'));		}				$this->page_title = $this->ipsclass->lang['member_bets'];		$this->nav[]      = $this->ipsclass->lang['member_bets'];	}	}	/*-------------------------------------------------------------------------*/	// Show Member Permissions	/*-------------------------------------------------------------------------*/		function show_member_perms()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',															   'from'   => 'members',															   'where'  => "ibbookie_banned > 0 OR ibbookie_add > 0 OR ibbookie_mod > 0 OR ibbookie_admin > 0",											  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['show_member_perms']}";			$data = "{$this->ipsclass->lang['no_members_perms']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		                 $this->ipsclass->DB->build_query( array( 'select' => 'id, mgroup, members_display_name, ibbookie_add, ibbookie_mod, ibbookie_admin, ibbookie_banned',		'from'   => 'members',		'where'  => "ibbookie_banned > 0 OR ibbookie_add > 0 OR ibbookie_mod > 0 OR ibbookie_admin > 0",		'order'  => 'members_display_name ASC',		'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )	) );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['ibbookie_add']   = intval($r['ibbookie_add']);				$r['ibbookie_mod']   = intval($r['ibbookie_mod']);				$r['ibbookie_admin']   = intval($r['ibbookie_admin']);				$r['ibbookie_banned'] = $r['ibbookie_banned'];				$r['name']   = $this->ipsclass->make_profile_link( $this->ipsclass->make_name_formatted($r['members_display_name'], $r['mgroup'] ), $r['id'] );				$r['group'] = $this->ipsclass->make_name_formatted( $this->ipsclass->cache['group_cache'][$r['mgroup']]['g_title'], $r['mgroup'] );								$content[] = $r;													$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=show_member_perms",													 )		);			}		$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->show_member_perms( $content, $links );			}		$this->page_title = $this->ipsclass->lang['show_member_perms'];		$this->nav[]      = $this->ipsclass->lang['show_member_perms'];		}			}	/*-------------------------------------------------------------------------*/	// Sport Selector Full	/*-------------------------------------------------------------------------*/		function sport_selector_full()	{		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}				$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(id) AS total',																   'from'   => 'bookie_cats',														  )		 );		if ( !$count['total'] )		{				$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['sport_selector']}";			$data = "{$this->ipsclass->lang['no_cats']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 'select' => 'id, cat_image, cat_name',			'from'   => 'bookie_cats',			'order'  => 'id ASC',			'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )		)	 );		 		$this->ipsclass->DB->exec_query();		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();						while ( $r = $this->ipsclass->DB->fetch_row() )			{				$r['id']   = $r['id'];				$r['cat_image'] = $r['cat_image'];				$r['cat_name'] = $r['cat_name'];								$content[] = $r;					}						$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=sport_selector_full",													 )		);						$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->sport_selector_full( $content, $links );		}			else			{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_cats'));			}		}		$this->page_title = $this->ipsclass->lang['sport_selector'];		$this->nav[]      = $this->ipsclass->lang['sport_selector'];	}	/*-------------------------------------------------------------------------*/	// Find Member Bets	/*-------------------------------------------------------------------------*/		function find_member_bets()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}						$data = array( 'title'     => $this->ipsclass->lang['find_member_bets'],					   'form_code' => 'do_find_mem_bets',					   'text'      => $this->ipsclass->lang['find_member_edit_bets'],					 );					 			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->find_member( $data );				$this->page_title = $this->ipsclass->lang['find_member'];			$this->nav[] = $this->ipsclass->lang['find_member'];	}		/*-------------------------------------------------------------------------*/	// Do Find Member Bets	/*-------------------------------------------------------------------------*/			function do_find_mem_bets()	{        if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }		$this->ipsclass->input['mem_name'] = strtolower( trim( $this->ipsclass->input['mem_name'] ) );				if ( !$this->ipsclass->input['mem_name'] )		{			$this->ipsclass->Error( array( 'MSG' => 'error_no_user' ) );		}				$memb = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'members_display_name, id',																  'from'   => 'members',																  'where'  => "members_l_display_name='".$this->ipsclass->input['mem_name']."'",														 )		);				if ( !$memb['id'] )		{			$this->ipsclass->Error( array( 'MSG' => 'error_no_user' ) );		}				$this->ipsclass->boink_it( $this->ipsclass->base_url."autocom=bookie&cmd=edit_bets&amp;userid=".$memb['id'] );	}				/*-------------------------------------------------------------------------*/	// Edit Bets Member Page	/*-------------------------------------------------------------------------*/		function edit_bets()	{		if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] ))         {            $this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));        }				$this->ipsclass->input['userid'] = intval($this->ipsclass->input['userid']);					if ( !$this->ipsclass->input['userid'] )			{				$this->ipsclass->Error( array( 'MSG' => 'no_user' ) );			}		if ( isset( $this->ipsclass->input['st'] ) )		{			$this->first = intval( $this->ipsclass->input['st'] );		}				if ( !isset( $this->first ) )		{			$this->first = 0;		}			$count = $this->ipsclass->DB->build_and_exec_query( array( 'select' => 'COUNT(bid) AS total',																   'from'   => 'bookie_bets',																   'where'  => 'userid='.$this->ipsclass->input['userid'],														  )		 );		if ( !$count['total'] )		{						$title = "<{CAT_IMG}>&nbsp;{$this->ipsclass->lang['edit_bets']}";			$data = "{$this->ipsclass->lang['no_bets']}";			$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->none( $title, $data );		}		else		{		$this->ipsclass->DB->build_query( array( 'select' => 'bid, userid, gid, cat_image, home_team, away_team, amount, pick, odds ',															   'from'   => 'bookie_bets',															   'where'  => 'userid='.$this->ipsclass->input['userid'],															   															   'order'  => 'bid DESC',															   															   'limit'  => array( $this->first, $this->ipsclass->vars['ibbookie_num_pages'] )													  )		 );		$this->ipsclass->DB->exec_query();													  		if ( $this->ipsclass->DB->get_num_rows() )		{			$content = array();			while ( $r = $this->ipsclass->DB->fetch_row() )			{  				$r['bid'] = $r['bid'];				$r['userid'] = $r['userid'];								$r['gid']   = $r['gid'];				$r['cat_image']   = $r['cat_image'];				$r['home_team']   = $r['home_team'];				$r['amount']   = $r['amount'];								$r['away_team']   = $r['away_team'];								$r['pick']   = $r['pick'];								$r['odds']   = $r['odds'];				$content[] = $r;														$links = $this->ipsclass->build_pagelinks( array( 'TOTAL_POSS' => $count['total'],															  'PER_PAGE'   => $this->ipsclass->vars['ibbookie_num_pages'],															  'CUR_ST_VAL' => $this->first,															  'L_SINGLE'   => "",															  'L_MULTI'    => $this->ipsclass->lang['pages'],															  'BASE_URL'   => $this->ipsclass->base_url."autocom=bookie&amp;cmd=edit_bets&userid={$r[userid]}",													 )		);				}								$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->edit_bets( $content, $links );			}		else		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_bets'));		}		$this->page_title = $this->ipsclass->lang['edit_bets'];		$this->nav[]      = $this->ipsclass->lang['edit_bets'];		}	}		/*-------------------------------------------------------------------------*/	// Do Edit Bets	/*-------------------------------------------------------------------------*/		function do_edit_bets()		{        if  ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}		$odds = $this->ipsclass->input['odds'];		$pick = $this->ipsclass->input['pick'];				$amount = $this->ipsclass->input['amount'];		$bid = $this->ipsclass->input['bid'];		$delete = $this->ipsclass->input['delete'];		$userid = $this->ipsclass->input['userid'];			if ( $this->ipsclass->input['delete'] == 1 )			{			$this->ipsclass->DB->query("DELETE FROM ".SQL_PREFIX."bookie_bets WHERE bid = ".$bid );			$this->ipsclass->DB->simple_construct(array('update' => 'members',                                                            'set'    => "ibbookie_bets=ibbookie_bets-1",                                                            'where'  => "id=".$userid                                                      )        );            $this->ipsclass->DB->simple_exec();							}				if ( !$this->ipsclass->input['amount'] )			{				$this->ipsclass->Error( array( LEVEL => 1, MSG => 'error_no_amount' ) );			}			$this->ipsclass->DB->simple_construct(array('update' => 'bookie_bets',													'set'    => "odds='$odds',pick='$pick',amount='$amount'",                                                    'where'  => "bid=".$bid                                              )        );			$this->ipsclass->DB->simple_exec();					$this->ipsclass->print->redirect_screen( $this->ipsclass->lang['bet_edited'], "&autocom=bookie&amp;cmd=edit_bets&userid={$userid}" );	}		/*-------------------------------------------------------------------------*/	// Admin Tools	/*-------------------------------------------------------------------------*/		function tools()	{		if ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		} 		 $s = intval($this->ipsclass->input['s']); 		 if( $s == 1 ){$status = "{$this->ipsclass->lang['md_com']}";}		  		 else if( $s == 2  ){$status = "{$this->ipsclass->lang['gd_com']}";} 		 $this->ipsclass->DB->simple_construct( array( 'select' => '*', 									  'from'     => 'groups', 									  'where'     => 'g_id !='.$this->ipsclass->vars['guest_group'],	 									  'order'  => 'g_id ASC', 							 )      );	 		 $this->ipsclass->DB->simple_exec();		$groups .= '<select name="g_id">';		        $groups .= "<option selected>--Select Group--</option>";      while( $g = $this->ipsclass->DB->fetch_row() )      {        $groups .= "<option value='{$g['g_id']}'>{$g['g_title']}</option>";      }      $groups .= '</select>';					 		$this->output .= $this->ipsclass->compiled_templates['skin_bookie']->tools( $groups, $status );					$this->page_title = $this->ipsclass->lang['atools'];				$this->nav[] = $this->ipsclass->lang['navigation'];	}	/*-------------------------------------------------------------------------*/	// Group Donate	/*-------------------------------------------------------------------------*/	  	function group_donate() 	{		if ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}		$this->ipsclass->input['points'] = str_replace( ',', '', $this->ipsclass->input['points'] );				$this->ipsclass->input['points'] = str_replace( '-', '', intval($this->ipsclass->input['points']) );				$pts = intval($this->ipsclass->input['points']);				$gid = intval($this->ipsclass->input['g_id']);						if ( !$pts OR $pts == 0 )		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_input_pts'));		}		if ( !$gid OR $gid == 0 )		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_input_grp'));		}				$points = $this->ipsclass->vars['ibbookie_points']; 				$this->ipsclass->DB->build_query( array( 'update' => 'members', 'set' => "$points=$points+".$pts, 'where'  => 'mgroup='.$gid ) );				$this->ipsclass->DB->exec_query();			$s = intval($this->ipsclass->input['status']);		$this->ipsclass->boink_it( $this->ipsclass->base_url."autocom=bookie&amp;cmd=tools&amp;s=".$s ); 	}		/*-------------------------------------------------------------------------*/	// Mass Donate	/*-------------------------------------------------------------------------*/	  	function mass_donate() 	{		if ( !$this->ipsclass->member['ibbookie_admin_groups'] && ( !$this->ipsclass->member['ibbookie_admin'] )) 		{			$this->ipsclass->Error(array(LEVEL => 1, MSG => 'error_no_admin_bookie'));		}		$this->ipsclass->input['points'] = str_replace( ',', '', $this->ipsclass->input['points'] );				$this->ipsclass->input['points'] = str_replace( '-', '', intval($this->ipsclass->input['points']) );				$pts = intval($this->ipsclass->input['points']);			$points = $this->ipsclass->vars['ibbookie_points']; 				$this->ipsclass->DB->build_query( array( 'update' => 'members', 'set' => "$points=$points+".$pts ) );				$this->ipsclass->DB->exec_query();                                       		$s = intval($this->ipsclass->input['status']);		$this->ipsclass->boink_it( $this->ipsclass->base_url."autocom=bookie&amp;cmd=tools&amp;s=".$s ); 	}	}?>